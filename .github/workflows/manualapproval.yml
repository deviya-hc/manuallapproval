name: Build, Tag, Push, and Run the Docker container

on:
  push:
    branches:
      - main
jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Manual approval
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'  # Only trigger on main branch push
        uses: actions/github-script@v5
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.repos.createDispatchEvent({
              owner: 'jeebanj',
              repo: 'manualapproval.yml',
              event_type: 'approve-deployment',
              client_payload: {
                message: 'Please approve the deployment.'
               }
             }).then(({ data }) => {
               console.log('Dispatch event created:', data);
               console.log('Waiting for approval...');
               return github.actions.listRepoWorkflows({
                 owner: 'jeebanj',
                 repo: 'manualapproval.yml'
                });
              }).then(({ data: workflows }) => {
                const workflow = workflows.workflows.find(workflow => workflow.name === 'dynamicfileupdate.yml');
                if (workflow) {
                  return github.actions.listWorkflowRuns({
                    owner: 'jeebanj',
                    repo: 'manualapproval.yml',
                    workflow_id: workflow.id,
                    branch: 'main',
                    status: 'queued'
               });
              } else {
                console.log('Workflow not found.');
                return null;
              }
            }).then(({ data: runs }) => {
              if (runs && runs.total_count > 0) {
                console.log('Pipeline is queued, waiting for approval...');
                } else {
                console.log('Pipeline is not queued, skipping approval.');
               }
             }).catch(error => {
               console.error('Error:', error);
               throw error;
            });

